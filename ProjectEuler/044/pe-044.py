"""
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
difference are pentagonal and D = |Pk − Pj| is minimised; what is the
value of D?

"""

pentagonalNumbers = list()
searching = True
min = 10000000
ans = 0

def getPentagonalNumber( n ):
    return int( n*(3*n - 1)/2 )

def pentCheck( n ):
    if n == 0: return False
    if n == 1: return True
    c = (0.25) - (6 * (-n))
    a = ( 0.5 + (c**.5) )
    b = ( 0.5 - (c**.5) )
    print(a,b,n)
    if type(a) != complex:
        if a.is_integer() and abs(a) < n: return True
    if type(b) != complex:
        if b.is_integer() and abs(b) <= n: return True
    return False

ia = 1

while searching:
    ib = ia
    a = getPentagonalNumber( ia )
    b = getPentagonalNumber( ib )
    while ((a-b) < min) and ib > 0:
        if pentCheck(a+b) and pentCheck(a-b):
            min = a-b
            print(a,b, (a+b), min)
            ans = min
        ib -= 1
        b = getPentagonalNumber( ib )
    if (getPentagonalNumber( ia + 1)-a) > min:searching = False
    ia += 1

print(ans)
